# The Caddyfile is an easy way to configure your Caddy web server.
#
# Unless the file starts with a global options block, the first
# uncommented line is always the address of your site.
#
# To use your own domain name (with automatic HTTPS), first make
# sure your domain's A/AAAA DNS records are properly pointed to
# this machine's public IP, then replace the line below with your
# domain name.
# :80

# Set this path to your site's directory.
# root * /usr/share/caddy

# Enable the static file server.
# file_server

# Another common task is to set up a reverse proxy:
# reverse_proxy localhost:8080

# Or serve a PHP site through php-fpm:
# php_fastcgi localhost:9000

# Refer to the Caddy docs for more information:
# https://caddyserver.com/docs/caddyfile

# {
#     # Global options block. Entirely optional, https is on by default
#     # Optional email key for lets encrypt
#     email youremail@domain.com 
#     # Optional staging lets encrypt for testing. Comment out for production.
#     # acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
# }

# Caddy auth_portal:
# https://github.com/greenpau/caddy-auth-portal#authentication-portal

## Token jwt for reuse 
(jwt_shared) {
  token_name access_key
  token_secret /etc/caddy/auth/jwt/access_key
  # token_lifetime 3600
}

(ui_links) {

}

## For use when a new docker container is activated
(service_route_snippet) {
    jwt
    uri strip_prefix /{args.0}
}


{{ domain }} {
  # tls internal

  route /auth* {
    auth_portal {
      path /auth
      backends {
        local_backend {
          method local
          path /etc/caddy/auth/local/users.json
          realm local
        }
      }
      jwt {
        import jwt_shared whoami
      }
      ui {
        links {
          import ui_links
        }
      }
    }
  }

  route /version* {
    jwt {
      primary yes
      trusted_tokens {
        static_secret {
          import jwt_shared
        }
      }
      auth_url /auth
    }
    respond * "1.0.0" 200
  }

  route {
    redir https://{hostport}/auth 302
  }
}